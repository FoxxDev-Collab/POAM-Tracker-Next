"use client"

import { useEffect, useState } from "react"
import { Shield, Package, AlertTriangle, CheckCircle, Clock, TrendingUp, Activity, Users } from "lucide-react"
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Progress } from "@/components/ui/progress"
import { Skeleton } from "@/components/ui/skeleton"

interface DashboardStats {
  catI: number
  catII: number
  resolvedToday: number
  pendingReviews: number
  totalSystems: number
  totalPackages: number
}

interface RecentActivity {
  rule_title: string
  severity: string
  status: string
  last_seen: string
  system_name: string
  rule_id: string
}

export default function VulnerabilityCenterPage() {
  const [stats, setStats] = useState<DashboardStats | null>(null)
  const [recentActivity, setRecentActivity] = useState<RecentActivity[]>([])
  const [loading, setLoading] = useState(true)

  useEffect(() => {
    fetchDashboardData()
  }, [])

  const fetchDashboardData = async () => {
    try {
      const response = await fetch('/api/dashboard/stats')
      if (response.ok) {
        const data = await response.json()
        setStats(data.stats)
        setRecentActivity(data.recentActivity || [])
      }
    } catch (error) {
      console.error('Failed to fetch dashboard data:', error)
    } finally {
      setLoading(false)
    }
  }

  const getSeverityColor = (severity: string) => {
    switch (severity?.toLowerCase()) {
      case 'high': return 'text-red-600 bg-red-50 border-red-200'
      case 'medium': return 'text-orange-600 bg-orange-50 border-orange-200'
      case 'low': return 'text-yellow-600 bg-yellow-50 border-yellow-200'
      default: return 'text-gray-600 bg-gray-50 border-gray-200'
    }
  }

  const getStatusBadge = (status: string) => {
    switch (status) {
      case 'Open': return <Badge variant="destructive">Open</Badge>
      case 'NotAFinding': return <Badge variant="default" className="bg-green-600">Resolved</Badge>
      case 'Not_Reviewed': return <Badge variant="secondary">Not Reviewed</Badge>
      default: return <Badge>{status}</Badge>
    }
  }

  return (
    <div className="space-y-8">
      {/* Header */}
      <div className="space-y-2">
        <div className="flex items-center gap-3">
          <div className="p-3 bg-primary/10 rounded-lg">
            <Shield className="h-8 w-8 text-primary" />
          </div>
          <div>
            <h1 className="text-3xl font-bold tracking-tight">Vulnerability Center</h1>
            <p className="text-muted-foreground">
              Package vulnerability management and compliance overview
            </p>
          </div>
        </div>
      </div>

      {/* Key Metrics */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <Card>
          <CardHeader className="pb-3">
            <div className="flex items-center justify-between">
              <CardTitle className="text-sm font-medium text-muted-foreground">Total Packages</CardTitle>
              <Package className="h-4 w-4 text-muted-foreground" />
            </div>
          </CardHeader>
          <CardContent>
            {loading ? (
              <Skeleton className="h-8 w-20" />
            ) : (
              <div className="text-2xl font-bold">{stats?.totalPackages || 0}</div>
            )}
            <p className="text-xs text-muted-foreground mt-1">Authorization packages</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="pb-3">
            <div className="flex items-center justify-between">
              <CardTitle className="text-sm font-medium text-muted-foreground">CAT I Findings</CardTitle>
              <AlertTriangle className="h-4 w-4 text-red-600" />
            </div>
          </CardHeader>
          <CardContent>
            {loading ? (
              <Skeleton className="h-8 w-20" />
            ) : (
              <div className="text-2xl font-bold text-red-600">{stats?.catI || 0}</div>
            )}
            <p className="text-xs text-muted-foreground mt-1">Critical vulnerabilities</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="pb-3">
            <div className="flex items-center justify-between">
              <CardTitle className="text-sm font-medium text-muted-foreground">CAT II Findings</CardTitle>
              <AlertTriangle className="h-4 w-4 text-orange-600" />
            </div>
          </CardHeader>
          <CardContent>
            {loading ? (
              <Skeleton className="h-8 w-20" />
            ) : (
              <div className="text-2xl font-bold text-orange-600">{stats?.catII || 0}</div>
            )}
            <p className="text-xs text-muted-foreground mt-1">High vulnerabilities</p>
          </CardContent>
        </Card>

        <Card>
          <CardHeader className="pb-3">
            <div className="flex items-center justify-between">
              <CardTitle className="text-sm font-medium text-muted-foreground">Resolved Today</CardTitle>
              <CheckCircle className="h-4 w-4 text-green-600" />
            </div>
          </CardHeader>
          <CardContent>
            {loading ? (
              <Skeleton className="h-8 w-20" />
            ) : (
              <div className="text-2xl font-bold text-green-600">{stats?.resolvedToday || 0}</div>
            )}
            <p className="text-xs text-muted-foreground mt-1">Findings closed</p>
          </CardContent>
        </Card>
      </div>

      {/* Overview Cards */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        {/* System Overview */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Users className="h-5 w-5" />
              System & Package Overview
            </CardTitle>
            <CardDescription>Infrastructure and authorization status</CardDescription>
          </CardHeader>
          <CardContent className="space-y-4">
            <div className="space-y-2">
              <div className="flex items-center justify-between">
                <span className="text-sm font-medium">Total Systems</span>
                {loading ? (
                  <Skeleton className="h-5 w-12" />
                ) : (
                  <span className="text-sm font-bold">{stats?.totalSystems || 0}</span>
                )}
              </div>
              <div className="flex items-center justify-between">
                <span className="text-sm font-medium">Active Packages</span>
                {loading ? (
                  <Skeleton className="h-5 w-12" />
                ) : (
                  <span className="text-sm font-bold">{stats?.totalPackages || 0}</span>
                )}
              </div>
              <div className="flex items-center justify-between">
                <span className="text-sm font-medium">Pending Reviews</span>
                {loading ? (
                  <Skeleton className="h-5 w-12" />
                ) : (
                  <span className="text-sm font-bold text-orange-600">{stats?.pendingReviews || 0}</span>
                )}
              </div>
            </div>

            {/* Compliance Progress */}
            <div className="space-y-2 pt-4 border-t">
              <div className="flex items-center justify-between text-sm">
                <span>Overall Compliance</span>
                <span className="font-medium">
                  {stats && stats.pendingReviews > 0 
                    ? Math.round(((stats.catI + stats.catII - stats.pendingReviews) / (stats.catI + stats.catII || 1)) * 100)
                    : 100}%
                </span>
              </div>
              <Progress 
                value={stats && stats.pendingReviews > 0 
                  ? ((stats.catI + stats.catII - stats.pendingReviews) / (stats.catI + stats.catII || 1)) * 100
                  : 100} 
                className="h-2" 
              />
            </div>
          </CardContent>
        </Card>

        {/* Vulnerability Summary */}
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center gap-2">
              <Activity className="h-5 w-5" />
              Vulnerability Summary
            </CardTitle>
            <CardDescription>Current security findings by severity</CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-4">
              <div className="grid grid-cols-3 gap-4">
                <div className="text-center p-4 rounded-lg border">
                  <div className="text-2xl font-bold text-red-600">{stats?.catI || 0}</div>
                  <p className="text-xs text-muted-foreground mt-1">Critical</p>
                </div>
                <div className="text-center p-4 rounded-lg border">
                  <div className="text-2xl font-bold text-orange-600">{stats?.catII || 0}</div>
                  <p className="text-xs text-muted-foreground mt-1">High</p>
                </div>
                <div className="text-center p-4 rounded-lg border">
                  <div className="text-2xl font-bold text-yellow-600">
                    {stats?.pendingReviews || 0}
                  </div>
                  <p className="text-xs text-muted-foreground mt-1">Pending</p>
                </div>
              </div>

              <div className="pt-4 border-t">
                <div className="flex items-center justify-between text-sm">
                  <span className="flex items-center gap-2">
                    <TrendingUp className="h-4 w-4 text-green-600" />
                    Today's Progress
                  </span>
                  <span className="font-medium text-green-600">
                    {stats?.resolvedToday || 0} resolved
                  </span>
                </div>
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Recent Activity */}
      <Card>
        <CardHeader>
          <CardTitle>Recent Vulnerability Activity</CardTitle>
          <CardDescription>Latest findings and status updates</CardDescription>
        </CardHeader>
        <CardContent>
          {loading ? (
            <div className="space-y-3">
              {[...Array(5)].map((_, i) => (
                <Skeleton key={i} className="h-12 w-full" />
              ))}
            </div>
          ) : recentActivity.length > 0 ? (
            <div className="space-y-3">
              {recentActivity.slice(0, 5).map((activity, index) => (
                <div key={index} className="flex items-center justify-between p-3 rounded-lg border">
                  <div className="flex-1">
                    <div className="font-medium text-sm">{activity.rule_title}</div>
                    <div className="text-xs text-muted-foreground">
                      {activity.system_name} • {activity.rule_id}
                    </div>
                  </div>
                  <div className="flex items-center gap-2">
                    <span className={`px-2 py-1 rounded text-xs font-medium ${getSeverityColor(activity.severity)}`}>
                      {activity.severity?.toUpperCase()}
                    </span>
                    {getStatusBadge(activity.status)}
                  </div>
                </div>
              ))}
            </div>
          ) : (
            <div className="text-center py-8 text-muted-foreground">
              No recent activity to display
            </div>
          )}
        </CardContent>
      </Card>
    </div>
  )
}