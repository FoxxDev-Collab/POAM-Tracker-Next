"use client"

import { useEffect, useState } from "react"
import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { 
  TrendingUp, 
  TrendingDown, 
  Minus,
  FileText,
  Calendar,
  AlertTriangle
} from "lucide-react"
import { cn } from "@/lib/utils"

interface NessusReport {
  id: number
  filename: string
  scan_name: string
  scan_date: string
  total_hosts: number
  total_vulnerabilities: number
  createdAt: string
  severity_counts?: {
    critical: number
    high: number
    medium: number
    low: number
    info: number
  }
}

interface ScanComparison {
  total_change: number
  critical_change: number
  high_change: number
  medium_change: number
  low_change: number
  trend: 'improving' | 'worsening' | 'stable'
}

function compareScan(current: NessusReport, previous: NessusReport | null): ScanComparison | null {
  if (!previous || !current.severity_counts || !previous.severity_counts) {
    return null
  }

  const totalCurrent = current.severity_counts.critical + current.severity_counts.high + 
                       current.severity_counts.medium + current.severity_counts.low
  const totalPrevious = previous.severity_counts.critical + previous.severity_counts.high + 
                        previous.severity_counts.medium + previous.severity_counts.low

  const comparison: ScanComparison = {
    total_change: totalCurrent - totalPrevious,
    critical_change: current.severity_counts.critical - previous.severity_counts.critical,
    high_change: current.severity_counts.high - previous.severity_counts.high,
    medium_change: current.severity_counts.medium - previous.severity_counts.medium,
    low_change: current.severity_counts.low - previous.severity_counts.low,
    trend: 'stable'
  }

  // Determine trend based on critical and high severity changes
  const severityScore = comparison.critical_change * 10 + comparison.high_change * 5 + comparison.medium_change
  if (severityScore < -5) {
    comparison.trend = 'improving'
  } else if (severityScore > 5) {
    comparison.trend = 'worsening'
  }

  return comparison
}

export default function NessusScanHistory({ reports }: { systemId: number, reports: NessusReport[] }) {
  const [loading, setLoading] = useState(false)
  const [enrichedReports, setEnrichedReports] = useState<NessusReport[]>([])

  useEffect(() => {
    // Enrich reports with severity counts if needed
    async function enrichReports() {
      setLoading(true)
      try {
        const enriched = await Promise.all(reports.map(async (report) => {
          if (!report.severity_counts) {
            // Fetch severity counts for this report
            try {
              const response = await fetch(`/api/vulnerabilities/nessus/stats?report_id=${report.id}`)
              if (response.ok) {
                const stats = await response.json()
                return {
                  ...report,
                  severity_counts: {
                    critical: stats.critical || 0,
                    high: stats.high || 0,
                    medium: stats.medium || 0,
                    low: stats.low || 0,
                    info: stats.info || 0
                  }
                }
              }
            } catch (err) {
              console.error('Failed to fetch report stats:', err)
            }
          }
          return report
        }))
        setEnrichedReports(enriched)
      } finally {
        setLoading(false)
      }
    }
    
    if (reports.length > 0) {
      enrichReports()
    } else {
      setEnrichedReports([])
    }
  }, [reports])

  const formatDate = (dateStr: string) => {
    const date = new Date(dateStr)
    const today = new Date()
    const diffTime = Math.abs(today.getTime() - date.getTime())
    const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24))
    
    if (diffDays === 0) return 'Today'
    if (diffDays === 1) return 'Yesterday'
    if (diffDays < 7) return `${diffDays} days ago`
    if (diffDays < 30) return `${Math.floor(diffDays / 7)} weeks ago`
    return date.toLocaleDateString()
  }

  const getTrendIcon = (trend: 'improving' | 'worsening' | 'stable') => {
    switch (trend) {
      case 'improving':
        return <TrendingDown className="h-4 w-4 text-green-600" />
      case 'worsening':
        return <TrendingUp className="h-4 w-4 text-red-600" />
      default:
        return <Minus className="h-4 w-4 text-gray-400" />
    }
  }

  const getChangeText = (change: number, type: string = '') => {
    if (change === 0) return null
    const prefix = change > 0 ? '+' : ''
    const color = change > 0 ? 'text-red-600' : 'text-green-600'
    return (
      <span className={cn("text-xs font-medium", color)}>
        {prefix}{change} {type}
      </span>
    )
  }

  return (
    <Card>
      <CardHeader>
        <CardTitle className="flex items-center gap-2">
          <Calendar className="h-5 w-5" />
          Scan History & Remediation Progress
        </CardTitle>
      </CardHeader>
      <CardContent>
        {loading && <div className="text-sm text-muted-foreground">Loading scan history...</div>}
        {!loading && enrichedReports.length === 0 && (
          <div className="text-sm text-muted-foreground">No scan history available. Upload a Nessus file to start tracking.</div>
        )}
        <div className="space-y-3">
          {enrichedReports.map((report, index) => {
            const previousReport = index < enrichedReports.length - 1 ? enrichedReports[index + 1] : null
            const comparison = compareScan(report, previousReport)
            
            return (
              <div key={report.id} className="rounded-lg border p-4 space-y-2 hover:bg-muted/50 transition-colors">
                <div className="flex items-start justify-between">
                  <div className="flex-1 space-y-1">
                    <div className="flex items-center gap-2">
                      <FileText className="h-4 w-4 text-muted-foreground" />
                      <span className="text-sm font-medium truncate">
                        {report.scan_name || report.filename}
                      </span>
                      {index === 0 && (
                        <Badge variant="secondary" className="text-xs">Latest</Badge>
                      )}
                    </div>
                    <div className="flex items-center gap-4 text-xs text-muted-foreground">
                      <span>{formatDate(report.scan_date || report.createdAt)}</span>
                      <span>{report.total_hosts} {report.total_hosts === 1 ? 'host' : 'hosts'}</span>
                      <span>{report.total_vulnerabilities} vulnerabilities</span>
                    </div>
                  </div>
                  {comparison && (
                    <div className="flex items-center gap-2">
                      {getTrendIcon(comparison.trend)}
                      <div className="text-right">
                        {comparison.trend === 'improving' && (
                          <Badge variant="outline" className="text-xs border-green-200 bg-green-50 text-green-700">
                            Improving
                          </Badge>
                        )}
                        {comparison.trend === 'worsening' && (
                          <Badge variant="outline" className="text-xs border-red-200 bg-red-50 text-red-700">
                            Needs Attention
                          </Badge>
                        )}
                        {comparison.trend === 'stable' && (
                          <Badge variant="outline" className="text-xs">
                            Stable
                          </Badge>
                        )}
                      </div>
                    </div>
                  )}
                </div>
                
                {report.severity_counts && (
                  <div className="flex gap-3 pt-2 border-t">
                    <div className="flex items-center gap-1">
                      <div className="h-2 w-2 rounded-full bg-purple-600" />
                      <span className="text-xs text-muted-foreground">
                        Critical: {report.severity_counts.critical}
                      </span>
                      {comparison && getChangeText(comparison.critical_change)}
                    </div>
                    <div className="flex items-center gap-1">
                      <div className="h-2 w-2 rounded-full bg-red-600" />
                      <span className="text-xs text-muted-foreground">
                        High: {report.severity_counts.high}
                      </span>
                      {comparison && getChangeText(comparison.high_change)}
                    </div>
                    <div className="flex items-center gap-1">
                      <div className="h-2 w-2 rounded-full bg-orange-600" />
                      <span className="text-xs text-muted-foreground">
                        Medium: {report.severity_counts.medium}
                      </span>
                      {comparison && getChangeText(comparison.medium_change)}
                    </div>
                    <div className="flex items-center gap-1">
                      <div className="h-2 w-2 rounded-full bg-yellow-600" />
                      <span className="text-xs text-muted-foreground">
                        Low: {report.severity_counts.low}
                      </span>
                      {comparison && getChangeText(comparison.low_change)}
                    </div>
                  </div>
                )}
                
                {comparison && comparison.total_change !== 0 && (
                  <div className="pt-2 border-t">
                    <div className="flex items-center gap-2 text-xs">
                      <AlertTriangle className="h-3 w-3 text-muted-foreground" />
                      <span className="text-muted-foreground">Overall change:</span>
                      <span className={cn(
                        "font-medium",
                        comparison.total_change > 0 ? "text-red-600" : "text-green-600"
                      )}>
                        {comparison.total_change > 0 ? '+' : ''}{comparison.total_change} vulnerabilities
                      </span>
                    </div>
                  </div>
                )}
              </div>
            )
          })}
        </div>
      </CardContent>
    </Card>
  )
}