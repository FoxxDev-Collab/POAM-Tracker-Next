"use client"

import { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card"
import { Badge } from "@/components/ui/badge"
import { Button } from "@/components/ui/button"
import { Separator } from "@/components/ui/separator"
import { 
  Shield, 
  AlertTriangle, 
  ExternalLink, 
  Copy, 
  CheckCircle,
  Clock,
  TrendingUp
} from "lucide-react"
import { toast } from "sonner"

interface VulnerabilityDetailProps {
  vulnerability: {
    id: number
    plugin_id: number
    plugin_name: string
    plugin_family: string
    severity: number
    port?: string
    protocol?: string
    service?: string
    description?: string
    solution?: string
    synopsis?: string
    cve?: string
    cvss_score?: number
    cvss3_score?: number
    plugin_output?: string
    risk_factor?: string
    exploit_available?: boolean
    patch_publication_date?: string
    vuln_publication_date?: string
    host: {
      id: number
      hostname: string
      ip_address: string
    }
  }
}

export function VulnerabilityDetail({ vulnerability }: VulnerabilityDetailProps) {
  const getSeverityLabel = (severity: number): string => {
    switch (severity) {
      case 4: return 'Critical'
      case 3: return 'High'
      case 2: return 'Medium'
      case 1: return 'Low'
      case 0: return 'Info'
      default: return 'Unknown'
    }
  }

  const getSeverityColor = (severity: number): string => {
    switch (severity) {
      case 4: return 'bg-purple-100 text-purple-800 dark:bg-purple-900 dark:text-purple-200'
      case 3: return 'bg-red-100 text-red-800 dark:bg-red-900 dark:text-red-200'
      case 2: return 'bg-orange-100 text-orange-800 dark:bg-orange-900 dark:text-orange-200'
      case 1: return 'bg-yellow-100 text-yellow-800 dark:bg-yellow-900 dark:text-yellow-200'
      case 0: return 'bg-blue-100 text-blue-800 dark:bg-blue-900 dark:text-blue-200'
      default: return 'bg-gray-100 text-gray-800 dark:bg-gray-900 dark:text-gray-200'
    }
  }

  const copyToClipboard = (text: string, label: string) => {
    navigator.clipboard.writeText(text)
    toast.success(`${label} copied to clipboard`)
  }

  const formatDate = (dateString?: string) => {
    if (!dateString) return 'N/A'
    return new Date(dateString).toLocaleDateString()
  }

  return (
    <Card className="w-full">
      <CardHeader>
        <div className="flex items-start justify-between gap-4">
          <div className="space-y-2">
            <div className="flex items-center gap-2">
              <Badge className={getSeverityColor(vulnerability.severity)}>
                {getSeverityLabel(vulnerability.severity)}
              </Badge>
              {vulnerability.exploit_available && (
                <Badge variant="destructive" className="text-xs">
                  <TrendingUp className="h-3 w-3 mr-1" />
                  Exploitable
                </Badge>
              )}
            </div>
            <CardTitle className="text-lg">{vulnerability.plugin_name}</CardTitle>
            <div className="text-sm text-muted-foreground">
              Plugin ID: {vulnerability.plugin_id} | Family: {vulnerability.plugin_family}
            </div>
          </div>
          <Button 
            variant="outline" 
            size="sm"
            onClick={() => copyToClipboard(`Plugin ${vulnerability.plugin_id}: ${vulnerability.plugin_name}`, 'Vulnerability info')}
          >
            <Copy className="h-4 w-4" />
          </Button>
        </div>
      </CardHeader>
      
      <CardContent className="space-y-6">
        {/* Host Information */}
        <div className="space-y-3">
          <h4 className="font-semibold flex items-center gap-2">
            <Shield className="h-4 w-4" />
            Host Information
          </h4>
          <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
            <div>
              <span className="text-muted-foreground">Hostname:</span>
              <span className="ml-2 font-mono">{vulnerability.host.hostname}</span>
            </div>
            <div>
              <span className="text-muted-foreground">IP Address:</span>
              <span className="ml-2 font-mono">{vulnerability.host.ip_address}</span>
            </div>
            {vulnerability.port && (
              <div>
                <span className="text-muted-foreground">Port/Protocol:</span>
                <span className="ml-2 font-mono">{vulnerability.port}/{vulnerability.protocol}</span>
              </div>
            )}
            {vulnerability.service && (
              <div>
                <span className="text-muted-foreground">Service:</span>
                <span className="ml-2">{vulnerability.service}</span>
              </div>
            )}
          </div>
        </div>

        <Separator />

        {/* Risk Assessment */}
        <div className="space-y-3">
          <h4 className="font-semibold flex items-center gap-2">
            <AlertTriangle className="h-4 w-4" />
            Risk Assessment
          </h4>
          <div className="grid grid-cols-1 md:grid-cols-3 gap-4 text-sm">
            {vulnerability.cvss3_score && (
              <div>
                <span className="text-muted-foreground">CVSS v3 Score:</span>
                <span className="ml-2 font-semibold">{vulnerability.cvss3_score}</span>
              </div>
            )}
            {vulnerability.cvss_score && (
              <div>
                <span className="text-muted-foreground">CVSS v2 Score:</span>
                <span className="ml-2 font-semibold">{vulnerability.cvss_score}</span>
              </div>
            )}
            {vulnerability.risk_factor && (
              <div>
                <span className="text-muted-foreground">Risk Factor:</span>
                <span className="ml-2">{vulnerability.risk_factor}</span>
              </div>
            )}
          </div>
        </div>

        {/* CVE Information */}
        {vulnerability.cve && (
          <>
            <Separator />
            <div className="space-y-3">
              <h4 className="font-semibold">CVE Information</h4>
              <div className="flex flex-wrap gap-2">
                {vulnerability.cve.split(', ').map((cve) => (
                  <Button
                    key={cve}
                    variant="outline"
                    size="sm"
                    onClick={() => window.open(`https://cve.mitre.org/cgi-bin/cvename.cgi?name=${cve}`, '_blank')}
                  >
                    {cve}
                    <ExternalLink className="h-3 w-3 ml-1" />
                  </Button>
                ))}
              </div>
            </div>
          </>
        )}

        {/* Synopsis */}
        {vulnerability.synopsis && (
          <>
            <Separator />
            <div className="space-y-3">
              <h4 className="font-semibold">Synopsis</h4>
              <p className="text-sm text-muted-foreground">{vulnerability.synopsis}</p>
            </div>
          </>
        )}

        {/* Description */}
        {vulnerability.description && (
          <>
            <Separator />
            <div className="space-y-3">
              <h4 className="font-semibold">Description</h4>
              <div className="text-sm text-muted-foreground whitespace-pre-wrap">
                {vulnerability.description}
              </div>
            </div>
          </>
        )}

        {/* Solution */}
        {vulnerability.solution && (
          <>
            <Separator />
            <div className="space-y-3">
              <h4 className="font-semibold flex items-center gap-2">
                <CheckCircle className="h-4 w-4 text-green-600" />
                Solution
              </h4>
              <div className="text-sm text-muted-foreground whitespace-pre-wrap">
                {vulnerability.solution}
              </div>
            </div>
          </>
        )}

        {/* Plugin Output */}
        {vulnerability.plugin_output && (
          <>
            <Separator />
            <div className="space-y-3">
              <h4 className="font-semibold">Plugin Output</h4>
              <div className="bg-muted/30 rounded-lg p-3">
                <pre className="text-xs text-muted-foreground whitespace-pre-wrap font-mono">
                  {vulnerability.plugin_output}
                </pre>
              </div>
            </div>
          </>
        )}

        {/* Publication Dates */}
        {(vulnerability.patch_publication_date || vulnerability.vuln_publication_date) && (
          <>
            <Separator />
            <div className="space-y-3">
              <h4 className="font-semibold flex items-center gap-2">
                <Clock className="h-4 w-4" />
                Publication Dates
              </h4>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-4 text-sm">
                {vulnerability.vuln_publication_date && (
                  <div>
                    <span className="text-muted-foreground">Vulnerability Published:</span>
                    <span className="ml-2">{formatDate(vulnerability.vuln_publication_date)}</span>
                  </div>
                )}
                {vulnerability.patch_publication_date && (
                  <div>
                    <span className="text-muted-foreground">Patch Published:</span>
                    <span className="ml-2">{formatDate(vulnerability.patch_publication_date)}</span>
                  </div>
                )}
              </div>
            </div>
          </>
        )}
      </CardContent>
    </Card>
  )
}